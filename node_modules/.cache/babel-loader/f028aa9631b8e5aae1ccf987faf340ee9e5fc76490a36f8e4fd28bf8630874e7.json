{"ast":null,"code":"import'./LeaderboardGameward-wls.css';import React,{useState,useEffect}from\"react\";import{useLocation}from'react-router-dom';import noeImage from'./noe.png';import iceeImage from'./icee.png';import laynImage from'./layn.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function LeaderboardGameward(){const leaderboard_id=new URLSearchParams(useLocation().search).get('id');const playerConfigs=[{wls_player_name:\"Iceee\",display_player_name:\"Icee\",avatar_image:iceeImage},{wls_player_name:\"Noefn10\",display_player_name:\"Noé\",avatar_image:noeImage},{wls_player_name:\"Layn92\",display_player_name:\"Layn\",avatar_image:laynImage}];const[playersData,setPlayersData]=useState([null,null,null]);const[error,setError]=useState(null);useEffect(()=>{const loadPlayersData=async()=>{try{const firstResponse=await fetch(`https://api.wls.gg/v5/leaderboards/${leaderboard_id}?page=0`);const firstData=await firstResponse.json();const totalPages=firstData.total_pages||1;const promises=[];for(let page=0;page<totalPages;page++){promises.push(fetch(`https://api.wls.gg/v5/leaderboards/${leaderboard_id}?page=${page}`).then(response=>response.json()));}const allPagesData=await Promise.all(promises);const foundPlayers=[null,null,null];playerConfigs.forEach((config,index)=>{if(config.wls_player_name){allPagesData.forEach(data=>{for(let team in data.teams){const sessions=Object.values(data.teams[team].sessions);const gamesCount=sessions.length;const members=Object.values(data.teams[team].members);const playerInTeam=members.find(member=>member.name.toLowerCase().includes(config.wls_player_name.toLowerCase())||member.ingame_name&&member.ingame_name.toLowerCase().includes(config.wls_player_name.toLowerCase()));if(playerInTeam&&!foundPlayers[index]){foundPlayers[index]={playerName:config.display_player_name,rank:data.teams[team].place,points:data.teams[team].points,games:gamesCount};}}});}});setPlayersData(foundPlayers);setError(null);}catch(error){console.error('Error loading players data:',error);setError('Erreur lors du chargement des données');}};if(leaderboard_id){loadPlayersData();const interval=setInterval(loadPlayersData,15000);return()=>clearInterval(interval);}else{setError('ID du leaderboard manquant');}},[leaderboard_id]);if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"gameward_overlay\",children:/*#__PURE__*/_jsx(\"div\",{className:\"error_container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"error_text\",children:error})})});}return/*#__PURE__*/_jsx(\"div\",{className:\"gameward_overlay\",children:playersData.map((playerData,index)=>{const config=playerConfigs[index];return/*#__PURE__*/_jsxs(\"div\",{className:\"player_stats_container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"player_name_linear\",children:playerData?playerData.playerName:config.display_player_name}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats_display_linear\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat_item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat_label\",children:\"TOP\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat_value\",children:playerData?playerData.rank:'-'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat_item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat_label\",children:\"POINTS\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat_value\",children:playerData?playerData.points:'-'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat_item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat_label\",children:\"GAMES\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat_value\",children:playerData?playerData.games:'-'})]})]})]},index);})});}export default LeaderboardGameward;","map":{"version":3,"names":["React","useState","useEffect","useLocation","noeImage","iceeImage","laynImage","jsx","_jsx","jsxs","_jsxs","LeaderboardGameward","leaderboard_id","URLSearchParams","search","get","playerConfigs","wls_player_name","display_player_name","avatar_image","playersData","setPlayersData","error","setError","loadPlayersData","firstResponse","fetch","firstData","json","totalPages","total_pages","promises","page","push","then","response","allPagesData","Promise","all","foundPlayers","forEach","config","index","data","team","teams","sessions","Object","values","gamesCount","length","members","playerInTeam","find","member","name","toLowerCase","includes","ingame_name","playerName","rank","place","points","games","console","interval","setInterval","clearInterval","className","children","map","playerData"],"sources":["C:/Users/tommo/Documents/leaderboard gw/src/LeaderboardGameward-wls.js"],"sourcesContent":["import './LeaderboardGameward-wls.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport noeImage from './noe.png';\r\nimport iceeImage from './icee.png';\r\nimport laynImage from './layn.png';\r\n\r\nfunction LeaderboardGameward() {\r\n    const leaderboard_id = new URLSearchParams(useLocation().search).get('id');\r\n    const playerConfigs = [\r\n        {\r\n            wls_player_name: \"Iceee\",\r\n            display_player_name: \"Icee\",\r\n            avatar_image: iceeImage\r\n        },\r\n        {\r\n            wls_player_name: \"Noefn10\", \r\n            display_player_name: \"Noé\", \r\n            avatar_image: noeImage\r\n        },\r\n        {\r\n            wls_player_name: \"Layn92\", \r\n            display_player_name: \"Layn\", \r\n            avatar_image: laynImage\r\n        }\r\n    ];\r\n\r\n    const [playersData, setPlayersData] = useState([null, null, null]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const loadPlayersData = async () => {\r\n            try {\r\n                const firstResponse = await fetch(`https://api.wls.gg/v5/leaderboards/${leaderboard_id}?page=0`);\r\n                const firstData = await firstResponse.json();\r\n                \r\n                const totalPages = firstData.total_pages || 1;\r\n                \r\n                const promises = [];\r\n                for (let page = 0; page < totalPages; page++) {\r\n                    promises.push(\r\n                        fetch(`https://api.wls.gg/v5/leaderboards/${leaderboard_id}?page=${page}`)\r\n                            .then(response => response.json())\r\n                    );\r\n                }\r\n                \r\n                const allPagesData = await Promise.all(promises);\r\n                const foundPlayers = [null, null, null];\r\n                \r\n                playerConfigs.forEach((config, index) => {\r\n                    if (config.wls_player_name) {\r\n                        allPagesData.forEach(data => {\r\n                            for (let team in data.teams) {\r\n                                const sessions = Object.values(data.teams[team].sessions);\r\n                                const gamesCount = sessions.length;\r\n                                const members = Object.values(data.teams[team].members);\r\n                                \r\n                                const playerInTeam = members.find(member => \r\n                                    member.name.toLowerCase().includes(config.wls_player_name.toLowerCase()) ||\r\n                                    (member.ingame_name && member.ingame_name.toLowerCase().includes(config.wls_player_name.toLowerCase()))\r\n                                );\r\n                                \r\n                                if (playerInTeam && !foundPlayers[index]) {\r\n                                    foundPlayers[index] = {\r\n                                        playerName: config.display_player_name,\r\n                                        rank: data.teams[team].place,\r\n                                        points: data.teams[team].points,\r\n                                        games: gamesCount\r\n                                    };\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                \r\n                setPlayersData(foundPlayers);\r\n                setError(null);\r\n            } catch (error) {\r\n                console.error('Error loading players data:', error);\r\n                setError('Erreur lors du chargement des données');\r\n            }\r\n        };\r\n        \r\n        if (leaderboard_id) {\r\n            loadPlayersData();\r\n            const interval = setInterval(loadPlayersData, 15000);\r\n            return () => clearInterval(interval);\r\n        } else {\r\n            setError('ID du leaderboard manquant');\r\n        }\r\n    }, [leaderboard_id]);\r\n\r\n\r\n    if (error) {\r\n        return (\r\n            <div className='gameward_overlay'>\r\n                <div className='error_container'>\r\n                    <div className='error_text'>{error}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='gameward_overlay'>\r\n            {playersData.map((playerData, index) => {\r\n                const config = playerConfigs[index];\r\n                \r\n                return (\r\n                    <div key={index} className='player_stats_container'>\r\n                        <div className='player_name_linear'>\r\n                            {playerData ? playerData.playerName : config.display_player_name}\r\n                        </div>\r\n                        \r\n                        <div className='stats_display_linear'>\r\n                            <div className='stat_item'>\r\n                                <span className='stat_label'>TOP</span>\r\n                                <span className='stat_value'>\r\n                                    {playerData ? playerData.rank : '-'}\r\n                                </span>\r\n                            </div>\r\n                            \r\n                            <div className='stat_item'>\r\n                                <span className='stat_label'>POINTS</span>\r\n                                <span className='stat_value'>\r\n                                    {playerData ? playerData.points : '-'}\r\n                                </span>\r\n                            </div>\r\n                            \r\n                            <div className='stat_item'>\r\n                                <span className='stat_label'>GAMES</span>\r\n                                <span className='stat_value'>\r\n                                    {playerData ? playerData.games : '-'}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default LeaderboardGameward;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}